openapi: 3.0.3
info:
  title: Market place API
  version: 1.0.0
  description: Entrega em grupo sprint 7-8
paths:
  /api/carts/{cart_id}/:
    get:
      operationId: api_carts_list
      parameters:
      - in: path
        name: cart_id
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartRetrieveList'
          description: ''
  /api/carts/{cart_id}/orders/:
    post:
      operationId: api_carts_orders_create
      parameters:
      - in: path
        name: cart_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersCreate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersCreate'
          description: ''
  /api/carts/{cart_id}/products/:
    post:
      operationId: api_carts_products_create
      parameters:
      - in: path
        name: cart_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartListProducts'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartListProducts'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartListProducts'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartListProducts'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomJWT'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomJWT'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomJWT'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomJWT'
          description: ''
  /api/orders/{id}/seller/:
    get:
      operationId: api_orders_seller_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersUpdate'
          description: ''
    put:
      operationId: api_orders_seller_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersUpdate'
          description: ''
    patch:
      operationId: api_orders_seller_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrdersUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrdersUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrdersUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersUpdate'
          description: ''
  /api/orders/client/{user_id}/:
    get:
      operationId: api_orders_client_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseOrdersListClientList'
          description: ''
  /api/orders/seller/{user_id}/:
    get:
      operationId: api_orders_seller_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseOrdersListClientList'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/address/:
    post:
      operationId: api_users_address_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        country:
          type: string
          maxLength: 30
        state:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 30
        street:
          type: string
          maxLength: 50
        number:
          type: string
          maxLength: 10
        cep:
          type: string
          pattern: ^\d{5}-\d{3}$
          maxLength: 9
        complement:
          type: string
          nullable: true
          maxLength: 100
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_id:
          type: string
          format: uuid
          readOnly: true
      required:
      - cep
      - city
      - country
      - district
      - id
      - number
      - state
      - street
      - updated_at
      - user_id
    CartListProducts:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        cart_id:
          type: string
          format: uuid
          readOnly: true
        product_id:
          type: string
          format: uuid
      required:
      - cart_id
      - id
      - product_id
      - quantity
    CartRetrieve:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_product:
          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductCartList'
      required:
      - product
      - quantity
      - total_product
    CategoryEnum:
      enum:
      - Eletronics
      - Clothing
      - Shoes
      - Toys
      - Sports
      - Health
      - School
      - Books
      - Crafts
      - Home
      - Beauty
      - Garden
      - Grocery
      - Others
      type: string
      description: |-
        * `Eletronics` - Eletronics
        * `Clothing` - Clothing
        * `Shoes` - Shoes
        * `Toys` - Toys
        * `Sports` - Sports
        * `Health` - Health
        * `School` - School
        * `Books` - Books
        * `Crafts` - Crafts
        * `Home` - Home
        * `Beauty` - Beauty
        * `Garden` - Garden
        * `Grocery` - Grocery
        * `Others` - Others
    CustomJWT:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    PaginatedCartRetrieveList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CartRetrieve'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedPurchaseOrdersListClientList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrdersListClient'
    PatchedProduct:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity_stock:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available_for_sale:
          type: boolean
          readOnly: true
        brand:
          type: string
          nullable: true
          maxLength: 50
        category:
          $ref: '#/components/schemas/CategoryEnum'
        seller_id:
          type: string
          format: uuid
          readOnly: true
    PatchedPurchaseOrdersUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity_items:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        user_id:
          type: string
          format: uuid
          readOnly: true
        seller_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 100
        username:
          type: string
        password:
          type: string
          writeOnly: true
          pattern: ^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$
          maxLength: 128
          minLength: 8
        email:
          type: string
          format: email
        cpf:
          type: string
          pattern: ^\d{3}\.\d{3}\.\d{3}-\d{2}$
          maxLength: 14
        bio:
          type: string
          nullable: true
        birthdate:
          type: string
          format: date
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_seller:
          type: boolean
          nullable: true
        is_client:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        cart_id:
          type: string
          readOnly: true
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity_stock:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available_for_sale:
          type: boolean
          readOnly: true
        brand:
          type: string
          nullable: true
          maxLength: 50
        category:
          $ref: '#/components/schemas/CategoryEnum'
        seller_id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - is_available_for_sale
      - name
      - price
      - quantity_stock
      - seller_id
    ProductCartList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        brand:
          type: string
          nullable: true
          maxLength: 50
        category:
          $ref: '#/components/schemas/CategoryEnum'
        seller_id:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - name
      - price
      - seller_id
    PurchaseOrdersCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        quantity_items:
          type: integer
          readOnly: true
        user_id:
          type: string
          format: uuid
          readOnly: true
        seller_id:
          type: string
          format: uuid
          readOnly: true
        orders:
          type: string
          readOnly: true
      required:
      - id
      - orders
      - price
      - quantity_items
      - seller_id
      - user_id
    PurchaseOrdersListClient:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        quantity_items:
          type: integer
          readOnly: true
        user_id:
          type: string
          format: uuid
          readOnly: true
        seller_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        products:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - price
      - products
      - quantity_items
      - seller_id
      - updated_at
      - user_id
    PurchaseOrdersUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity_items:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        user_id:
          type: string
          format: uuid
          readOnly: true
        seller_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - price
      - seller_id
      - updated_at
      - user_id
    StatusEnum:
      enum:
      - Em Andamento
      - Pedido Realizado
      - Entregue
      type: string
      description: |-
        * `Em Andamento` - Default
        * `Pedido Realizado` - Acoomplished
        * `Entregue` - Delivered
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 100
        username:
          type: string
        password:
          type: string
          writeOnly: true
          pattern: ^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$
          maxLength: 128
          minLength: 8
        email:
          type: string
          format: email
        cpf:
          type: string
          pattern: ^\d{3}\.\d{3}\.\d{3}-\d{2}$
          maxLength: 14
        bio:
          type: string
          nullable: true
        birthdate:
          type: string
          format: date
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_seller:
          type: boolean
          nullable: true
        is_client:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        cart_id:
          type: string
          readOnly: true
      required:
      - cart_id
      - cpf
      - created_at
      - email
      - first_name
      - id
      - last_name
      - password
      - updated_at
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
